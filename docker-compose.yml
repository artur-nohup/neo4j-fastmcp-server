version: '3.8'

services:
  neo4j-mcp-server:
    build: .
    container_name: neo4j-mcp-server
    ports:
      - "8080:8080"
    environment:
      # Neo4j Configuration (REQUIRED)
      - NEO4J_URI=${NEO4J_URI:-bolt://localhost:7687}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_DATABASE=${NEO4J_DATABASE:-neo4j}
      
      # OAuth Configuration (REQUIRED)
      - JWT_SECRET=${JWT_SECRET}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI:-http://localhost:8080/auth/callback}
      
      # MCP Server Configuration (OPTIONAL)
      - MCP_SERVER_NAME=${MCP_SERVER_NAME:-neo4j-memory-mcp}
      - MCP_SERVER_VERSION=${MCP_SERVER_VERSION:-1.0.0}
      - PORT=${PORT:-8080}
      - NODE_ENV=${NODE_ENV:-production}
    
    depends_on:
      - neo4j
    
    restart: unless-stopped
    
    networks:
      - neo4j-mcp-network
    
    volumes:
      - ./logs:/app/logs
    
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Include Neo4j if not running externally
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j-db
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - neo4j-mcp-network
    restart: unless-stopped

  # Optional: Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: neo4j-mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - neo4j-mcp-server
    networks:
      - neo4j-mcp-network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  neo4j-mcp-network:
    driver: bridge